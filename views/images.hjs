<!DOCTYPE html>
<html>
  <head>
    <title>Tweec.it</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/bootstrap.css' />
    <script type="text/javascript" src="/javascripts/ender.js"></script>
    <script type="text/javascript" src="/javascripts/superagent.min.js"></script>
  
  <script>
  //TODO: make last parameter a callback

    /* Users */
    function getUsers(){
      request
        .get('/users')
        .end(function(res){
          if(res.ok){
            console.log(res.body);
            //do something with res.body
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
    function getUser(email){
      request
        .get('/users/'+email)
        .end(function(res){
          if(res.ok){
            console.log(res.body);
            return res.body;
          } else {
            alert('request failed: ' + res.text);
          }
        });
    }
    function createUser(name, email){
      request
        .post('/users/create')
        .send({name: name, email: email})
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
    function updateUser(email, update){
      request
        .put('/users/'+email+'/update')
        .send(update)
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else { 
            alert("request failed: " + res.text);
          }
        });
    }
    function deleteUser(email){
      request
        .del('/users/'+email+'/destroy')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else { 
            alert("request failed: " + res.text);
          }
        });
    }

    /* Images */
    function getImages(user_email) {
      request
        .get('/users/'+user_email+'/images')
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            alert("request failed: " + res.text)
          }
        });
    }
    function getImage(user_email, img_id) {
      request
        .get('/users/'+user_email+'/images/'+img_id)
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            alert("request failed: " + res.text)
          }
        });
    }
    function createImage(user_email, img_name, img_path){
      request
        .post('/users/'+user_email+'/images/create')
        .send({name: img_name, path: img_path})
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
    function updateImage(user_email, img_id, update){
      request
        .put('/users/'+user_email+'/images/'+img_id+'/update')
        .send(update)
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed:' + res.text);
          }
        });
    }
    function deleteImage(user_email, img_id){
      request
        .del('/users/'+user_email+'/images/'+img_id+'/destroy')
        .end(function(res){
          if(res.ok){
            console.log(res.body);
            return res.body;
          } else {
            alert('request failed: ' + res.text);
          }
        });
    }
    function getAdjustments(user_email, img_id){
      request
        .get('/users/'+user_email+'/images/'+img_id+'/adjustments')
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            console.log(res.body);
            return res.body;
          } else {
            alert('request failed: ' + res.text);
          }
        });
    }
    function getAdjustment(user_email, img_id, adjust_id) {
      request
        .get('/users/'+user_email+'/images/'+img_id+'/adjustments/'+adjust_id)
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            console.log(res.body);
            return res.body;
          } else {
            alert('request failed: ' + res.text);
          }
        });
    }
    function createAdjustment(user_email, img_id, slug){
      request
        .post('/users/'+user_email+'/images/'+img_id+'/adjustments/create')
        .send({slug: slug})
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
    function updateAdjustment(user_email, img_id, adjust_id, update){
      request
        .put('/users/'+user_email+'/images/'+img_id+'/adjustments/'+adjust_id+'/update')
        .send(update)
        .set('Accept', 'application/json')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
    function deleteAdjustment(user_email, img_id, adjust_id){
      request
        .del('/users/'+user_email+'/images'+img_id+'/adjustments/'+adjust_id+'/destory')
        .end(function(res){
          if(res.ok){
            //do something with res.body
            console.log(res.body);
            return res.body;
          } else {
            //parse error in res.text
            alert('request failed: ' + res.text);
          }
        });
    }
  </script>
  </head>
  <body>
    <div id="albums">
      {{#albums}}
        <section class="album" album-id="{{ id }}" album-key="{{ key }}" album-title="{{ title }}"></section>
      {{/albums}}
    </div>
    <script>

    //this pulls images from smugmug using the users session & displays them
      $.domReady(function(){
        $.each($('#albums').find('section.album'), function(album){
          $(album).append('<h3>'+album.getAttribute('album-title')+'</h3>');
          //make a call for images
          request.get('/smugmug/images/'+album.getAttribute('album-id')+'/'+album.getAttribute('album-key'))
                .end(function(res){
                  if(res.ok){
                    console.log(res.body);
                    $.each(res.body, function(url){
                      $(album).append('<img src="'+url+'" />');
                    });
                  } else {
                    alert('request failed: ' + res.text);
                  }
                });
          //$(album).append();
        });
      });

    </script>
    <script>
      $.domReady(function(){
        $('body').append('<a href="#checkout" id="checkout">Checkout</a>');
        $('a#checkout').bind('click', function(){
          //pop up modal that shows order summary
          //
        });
      });
      Stripe.setPublishableKey("pk_YEgLMc3ZghMs7fiWRMSkZCfuslcUf:");
      function stripeResponseHandler(status, response) {
        if (response.error) {
          $('.submit-button').removeAttr("disabled");
          $(".payment-errors").html(response.error.message);
        } else {
          var form$ = $("#payment-form");
          var token = response['id'];
          form$.append("<input type='hidden' name='stripeToken' value='" + token + "' />");
          form$.get(0).submit();
        }
      }
      $(document).ready(function() {
        $("#payment-form").submit(function(event) {
          $('.submit-button').attr("disabled", "disabled");
          Stripe.createToken({
            number: $('.card-number').val(),
            cvc: $('.card-cvc').val(),
            exp_month: $('.card-expiry-month').val(),
            exp_year: $('.card-expiry-year').val()
          }, stripeResponseHandler);
          return false;
        });
      });
      if (window.location.protocol === 'file:') {
        alert("stripe.js does not work when included in pages served over file:// URLs. Try serving this page over a webserver. Contact support@stripe.com if you need assistance.");
      }

    </script>
  </body>
  </html>